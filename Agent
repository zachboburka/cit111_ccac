/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SetsAndMaps;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

/**
 * Program creates agents and assigns them with an ID Number and Stealth Rating
 * Each agent is deployed randomly to one of four countries and their stealth
 * rating is compared to the respective country's which will reveal whether or
 * not they are still undercover
 *
 * @author zachboburka
 */
public class Agent {

    Map<Integer, Agent> mapAgent = new HashMap();
    int idNum = 10000;
    int agentsCompromised;
    double countryStealth;
    double stealthiness;
    boolean secretCoverUpheld;

    /**
     * Sets and gets the ID Number for each Agent ID is set by a counter going
     * up to 10000
     */
    public void SetID() {
        idNum = count++;

    } // end SetID

    public int GetID() {
        mapAgent.get(idNum);
        return idNum;

    } //end GetStealth

    /**
     * Sets and gets the stealth rating for each Agent Stealth is set by setting
     * stealthSet to a random double
     */
    public void SetStealth(double stealthSet) {
        Random r = new Random();
        stealthSet = r.nextDouble();
        stealthiness = stealthSet;

    } //end SetStealth

    public double GetStealth() {
        mapAgent.get(stealthiness);
        return stealthiness;
    } //end GetStealth

    public void setCountry() {
        /**
         * Pick a random country for Agent Object 1 creates an array duplicate
         * of countryMap Object two chooses a random country based its number in
         * the array
         */
        
    } //end setCountry

    public boolean IsCoverBlown() {
        /**
         * If statement deciding agent's cover status if the agents stealth
         * rating is greater than the country's stealth rating, then they remain
         * in cover Their cover will be blown if their stealth rating is less
         * than the country's stealth rating Planned to add a final output that
         * would display how many agents are undercover/compromised but haven't
         * gotten it to work
         */
        
        if (stealthiness > countryMap.get(key)) {
            undercoverList.add(idNum);
            System.out.println("Agent is still in cover.");
            secretCoverUpheld = true;
        } else {
            compromisedList.add(idNum);
            System.out.println("Agent's cover is blown.");
            secretCoverUpheld = false;
        } //end if statement
        return secretCoverUpheld;
    }//end IsCoverBlown

    /**
     * Agent Factory Creates agents using a for loop Number of agents can be
     * edited by changing the object and for loop Each agent is given an ID
     * Number and a Stealth Rating Stealth Rating is used to determine the
     * agent's cover status
     */
    public Agent genAgent() {

        System.out.println("");
        System.out.println("Agent ID : " + ga[i].GetID());
        System.out.println("Stealth Rating : " + ga[i].GetStealth());
        System.out.println(secretCoverUpheld);
        return secretCoverUpheld;
    }



public void printStatus() {
        //Prints out number of agents undercover and compromised

        System.out.println("");
        System.out.println("Agent Totals : ");
        System.out.println("Number of agents undercover : " + undercoverList.size());
        System.out.println("Number of agents compromised : " + compromisedList.size());
    } // end printStatus

}//end Agent
